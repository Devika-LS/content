commonfields:
  id: ShowOnMap
  version: -1
name: ShowOnMap
script: >
  def show_on_map(lat=None, lng=None, address=None):

      if not all((lat,lng)):
          if not address:
              raise DemistoException("no coordinates OR address provided")

          instances = demisto.executeCommand("GetInstances", {"brand" : "GoogleMaps"})

          if not instances or not instances[0]["Contents"]:
              raise DemistoException("No GoogleMaps instance setup, which is required for geocoding.")

          try:
              ec = demisto.executeCommand("google-maps-geocode", {"search_address" : address})[0]["EntryContext"]

              if ec is None:
                  raise DemistoException("No matching places were found.")

              geocoded = list(ec.values())[0]

              lat = geocoded["lat"]
              lng = geocoded["lng"]


          if not all((lat,lng)):
              raise DemistoException("Geocoding failed")

      else: # both are provided as args
          lat = float(lat)
          lng = float(lng)

      return {"Type":entryTypes['map'],
                "ContentsFormat": formats['json'],
                "Contents": {'lat':lat, 'lng':lng}
      }


  def main():
      args = demisto.args()

      try:
          return_results(show_on_map(**args))
      except DemistoException as e:
          return_error(str(e))

  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

type: python
tags:
- Utility
comment: Returns a map entry with marker on the given coordinates (lat, lng), or address
  (requires a configured GoogleMaps instance)
enabled: true
args:
- name: lat
  required: false
  default: true
  description: Latitude (e.g. 32.064622)
- name: lng
  required: false
  description: Longitude (e.g. 34.774131)
- name: address
  default: true
  required: false
  description: Address (will be converted to coordinates and then shown)
scripttarget: 0
subtype: python3
pswd: ""
runonce: false
dockerimage: demisto/python3:3.9.5.20070
runas: DBotWeakRole
engineinfo: {}
