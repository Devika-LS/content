commonfields:
  id: ShowOnMap
  version: -1
name: ShowOnMap
script: >
  var lat = parseFloat(args.lat);
  var lng = parseFloat(args.lng);

  val invalidCoordinates = (isNaN(lat) || isNaN(lng));
  var address = args.address;

  if (invalidCoordinates) {
      val instances = executeCommand("getInstances", {"brand" : "GoogleMaps"});

      if (("Modules" in instances) && instances["Modules"].length > 0){
          // Geocoding is possible
          val geocoded = executeCommand("geocode", {"address" : address});

          }

      else { // Geocoding is not possible
          return {
                ContentsFormat: formats.text,
                Type: entryTypes.error,
                Contents: 'No instance of GoogleMaps was found, but coordinates were not provided.\n
                          please configure an instance one to show addresses.'
          };
      }

      // Can not geocode address
      if (address) {
          return {
              ContentsFormat: formats.text,
              Type: entryTypes.error,
              Contents: 'Invalid coordinates, and no address was provided.'
      };

      // Geocode the address


  }

  if(invalidCoordinates) {
      return {
          ContentsFormat: formats.text,
          Type: entryTypes.error,
          Contents: 'Invalid coordinates'
      };
  }


  var locationObj = {
      lat: lat,
      lng: lng
  };


  return {
      // type
      Type: entryTypes.map,
       // contents
      ContentsFormat: formats.json, Contents: locationObj
  };
type: javascript
tags:
- Utility
comment: Returns a map entry with marker on the given coordinate (lat, lng).
enabled: true
args:
  - name: lat
    required: false
  default: true
  description: Latitude (e.g. 32.064622)
- name: lng
  required: false
  description: Longitude (e.g. 34.774131)
  - name: address
    required: false
    description: Address (will be converted to coordinates and then shown)
scripttarget: 0
fromversion: 5.0.0
